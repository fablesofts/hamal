<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<bean id="hsqldbConfig" class="com.fable.hamal.manager.schedule.store.HsqldbConfig" init-method="initialize">
		<property name="jdbcHsqldTemplate" ref="jdbcHsqldTemplate"/>
		<property name="resourceLoader" ref="resourceLoader"/>
	</bean>
	
	<!-- 数据源定义,使用dbcp -->
	<bean id="jobDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${job.store.jdbc.driverClassName}" />
		<property name="url" value="${job.store.jdbc.url}${job.store.path}" />
		<property name="username" value="${job.store.jdbc.username}" />
		<property name="password" value="${job.store.jdbc.password}" />
		<!-- 配置连接池的初始值 -->
		<property name="initialSize" value="1" />
		<!-- 连接池的最大值 -->
		<!-- <property name="maxActive" value="500"/> -->
		<!-- 最大空闲时，当经过一个高峰之后，连接池可以将一些用不到的连接释放，一直减少到maxIdle为止 -->
		<!-- <property name="maxIdle" value="2"/> -->
		<!-- 当最小空闲时，当连接少于minIdle时会自动去申请一些连接 -->
		<property name="minIdle" value="1" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="20" />
		<property name="maxWait" value="1000" />
	</bean>
	
	<bean id="jobScheduleService" class="com.fable.hamal.manager.schedule.service.impl.JobScheduleServiceImpl" scope="singleton">
		<property name="scheduler" ref="quartzScheduler" />
	</bean>
	
	<bean id="jdbcHsqldTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="jobDataSource" />
	</bean>
	<bean id="resourceLoader" class="org.springframework.core.io.DefaultResourceLoader"></bean>
	
	<bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" depends-on="hsqldbConfig">
		<property name="dataSource">
			<ref bean="jobDataSource" />
		</property>
		<property name="applicationContextSchedulerContextKey" value="context" />
		<property name="configLocation" value="classpath:quartz.properties" />
	</bean>
</beans>